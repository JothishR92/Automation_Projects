<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190221 11:58:34.895" generator="Robot 3.1.1 (Python 2.7.15rc1 on linux2)">
<suite source="/home/ganesh/ganesh_automation/protocol_automation/protocols/ftp/server/ftp_server.robot" id="s1" name="Ftp Server">
<kw type="setup" name="Open Connection And Log In">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>SERVER_IP</arg>
</arguments>
<assign>
<var>${ip}</var>
</assign>
<msg timestamp="20190221 11:58:35.047" level="INFO">${ip} = 10.132.243.132</msg>
<status status="PASS" endtime="20190221 11:58:35.047" starttime="20190221 11:58:35.046"></status>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>SERVER_NAME</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20190221 11:58:35.047" level="INFO">${name} = root</msg>
<status status="PASS" endtime="20190221 11:58:35.047" starttime="20190221 11:58:35.047"></status>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>SERVER_PWD</arg>
</arguments>
<assign>
<var>${pwd}</var>
</assign>
<msg timestamp="20190221 11:58:35.048" level="INFO">${pwd} = root</msg>
<status status="PASS" endtime="20190221 11:58:35.048" starttime="20190221 11:58:35.048"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${ip}</arg>
</arguments>
<status status="PASS" endtime="20190221 11:58:35.049" starttime="20190221 11:58:35.048"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${name}</arg>
<arg>${pwd}</arg>
</arguments>
<msg timestamp="20190221 11:58:35.050" level="INFO">Logging into '10.132.243.132:22' as 'root'.</msg>
<msg timestamp="20190221 11:58:36.653" level="INFO">Read output: Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-20-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage


 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

526 packages can be updated.
217 updates are security updates.

Last login: Thu Feb 21 11:55:19 2019 from 10.132.242.64
root@server-virtual-machine:~#</msg>
<status status="PASS" endtime="20190221 11:58:36.653" starttime="20190221 11:58:35.049"></status>
</kw>
<status status="PASS" endtime="20190221 11:58:36.653" starttime="20190221 11:58:35.045"></status>
</kw>
<test id="s1-t1" name="03_Create Shares">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>robot /home/ganesh/ganesh_automation/protocol_automation/protocols/ftp/server/../../common/shares.robot</arg>
</arguments>
<msg timestamp="20190221 11:58:36.660" level="INFO">Running command 'robot /home/ganesh/ganesh_automation/protocol_automation/protocols/ftp/server/../../common/shares.robot 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20190221 11:58:39.123" starttime="20190221 11:58:36.657"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ls -l</arg>
</arguments>
<assign>
<var>${test}</var>
</assign>
<msg timestamp="20190221 11:58:39.125" level="INFO">Executing command 'ls -l'.</msg>
<msg timestamp="20190221 11:58:39.139" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190221 11:58:39.139" level="INFO">${test} = total 8
-rw-r--r-- 1 root root    0 Feb 20 18:15 pwd
drwxr-xr-x 2 root root 4096 Feb 13 12:57 return_rc=True
drwxr-xr-x 2 root root 4096 Feb 13 12:57 return_stdout=FALSE
-rw-r--r-- 1 root root    0 Fe...</msg>
<status status="PASS" endtime="20190221 11:58:39.139" starttime="20190221 11:58:39.124"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /private</arg>
</arguments>
<msg timestamp="20190221 11:58:39.181" level="INFO">cd /private</msg>
<status status="PASS" endtime="20190221 11:58:39.181" starttime="20190221 11:58:39.140"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>touch priv.txt</arg>
</arguments>
<msg timestamp="20190221 11:58:39.184" level="INFO">root@server-virtual-machine:/private# touch priv.txt</msg>
<status status="PASS" endtime="20190221 11:58:39.184" starttime="20190221 11:58:39.182"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd ../common/public/</arg>
</arguments>
<msg timestamp="20190221 11:58:39.187" level="INFO">root@server-virtual-machine:/private# cd ../common/public/</msg>
<status status="PASS" endtime="20190221 11:58:39.187" starttime="20190221 11:58:39.184"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>touch pub.txt</arg>
</arguments>
<msg timestamp="20190221 11:58:39.190" level="INFO">root@server-virtual-machine:/common/public# touch pub.txt</msg>
<status status="PASS" endtime="20190221 11:58:39.190" starttime="20190221 11:58:39.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Shares created successfully..."</arg>
</arguments>
<msg timestamp="20190221 11:58:39.191" level="INFO">"Shares created successfully..."</msg>
<status status="PASS" endtime="20190221 11:58:39.191" starttime="20190221 11:58:39.190"></status>
</kw>
<doc>Creating Shares</doc>
<status status="PASS" endtime="20190221 11:58:39.192" critical="yes" starttime="20190221 11:58:36.655"></status>
</test>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20190221 11:58:39.308" starttime="20190221 11:58:39.193"></status>
</kw>
<status status="PASS" endtime="20190221 11:58:39.308" starttime="20190221 11:58:34.897"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Ftp Server" pass="1">Ftp Server</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
.json"&gt;/home/ganesh/ganesh_automation/protocol_automation/protocols/config/config.json&lt;/a&gt;'.</msg>
<msg timestamp="20190221 11:58:38.656" level="INFO">${json} = {
	"package_1":"samba",
	"package_2":"samba-common",
	"package_3":"python-glade2",
	"package_4":"system-config-samba",
	"ftp_server_pack":"vsftpd",
	"ftp_client_pack":"ftp",
	"client_pack":"cifs-utils...</msg>
<status status="PASS" endtime="20190221 11:58:38.656" starttime="20190221 11:58:38.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${obj}</var>
</assign>
<msg timestamp="20190221 11:58:38.657" level="INFO">${obj} = {u'package_4': u'system-config-samba', u'config_file': u'/etc/samba/smb.conf', u'package_1': u'samba', u'package_2': u'samba-common', u'package_3': u'python-glade2', u'private': u'/private', u'public'...</msg>
<status status="PASS" endtime="20190221 11:58:38.657" starttime="20190221 11:58:38.656"></status>
</kw>
<msg timestamp="20190221 11:58:38.658" level="INFO">${share_public} = {u'package_4': u'system-config-samba', u'config_file': u'/etc/samba/smb.conf', u'package_1': u'samba', u'package_2': u'samba-common', u'package_3': u'python-glade2', u'private': u'/private', u'public'...</msg>
<status status="PASS" endtime="20190221 11:58:38.658" starttime="20190221 11:58:38.655"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p ${share_public["public"]}</arg>
<arg>return_stdout=FALSE</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20190221 11:58:38.659" level="INFO">Executing command 'mkdir -p /common/public'.</msg>
<msg timestamp="20190221 11:58:38.735" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190221 11:58:38.735" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20190221 11:58:38.735" starttime="20190221 11:58:38.658"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>chmod 777 ${share_public["public"]}</arg>
</arguments>
<assign>
<var>${rc1}</var>
</assign>
<msg timestamp="20190221 11:58:38.736" level="INFO">Executing command 'chmod 777 /common/public'.</msg>
<msg timestamp="20190221 11:58:38.812" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190221 11:58:38.812" level="INFO">${rc1} = </msg>
<status status="PASS" endtime="20190221 11:58:38.812" starttime="20190221 11:58:38.735"></status>
</kw>
<doc>Creating Public Share</doc>
<status status="PASS" endtime="20190221 11:58:38.812" critical="yes" starttime="20190221 11:58:38.654"></status>
</test>
<test id="s1-t3" name="share_readonly">
<kw name="Packages">
<assign>
<var>${share_ro}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>/home/ganesh/ganesh_automation/protocol_automation/protocols/common/../config/config.json</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190221 11:58:38.815" html="yes" level="INFO">Getting file '&lt;a href="file:///home/ganesh/ganesh_automation/protocol_automation/protocols/config/config.json"&gt;/home/ganesh/ganesh_automation/protocol_automation/protocols/config/config.json&lt;/a&gt;'.</msg>
<msg timestamp="20190221 11:58:38.815" level="INFO">${json} = {
	"package_1":"samba",
	"package_2":"samba-common",
	"package_3":"python-glade2",
	"package_4":"system-config-samba",
	"ftp_server_pack":"vsftpd",
	"ftp_client_pack":"ftp",
	"client_pack":"cifs-utils...</msg>
<status status="PASS" endtime="20190221 11:58:38.815" starttime="20190221 11:58:38.814"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${obj}</var>
</assign>
<msg timestamp="20190221 11:58:38.816" level="INFO">${obj} = {u'package_4': u'system-config-samba', u'config_file': u'/etc/samba/smb.conf', u'package_1': u'samba', u'package_2': u'samba-common', u'package_3': u'python-glade2', u'private': u'/private', u'public'...</msg>
<status status="PASS" endtime="20190221 11:58:38.816" starttime="20190221 11:58:38.815"></status>
</kw>
<msg timestamp="20190221 11:58:38.817" level="INFO">${share_ro} = {u'package_4': u'system-config-samba', u'config_file': u'/etc/samba/smb.conf', u'package_1': u'samba', u'package_2': u'samba-common', u'package_3': u'python-glade2', u'private': u'/private', u'public'...</msg>
<status status="PASS" endtime="20190221 11:58:38.817" starttime="20190221 11:58:38.813"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p ${share_ro["ro"]}</arg>
<arg>return_stdout=FALSE</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20190221 11:58:38.818" level="INFO">Executing command 'mkdir -p /ro'.</msg>
<msg timestamp="20190221 11:58:38.861" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190221 11:58:38.861" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20190221 11:58:38.861" starttime="20190221 11:58:38.817"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>chmod 444 ${share_ro["ro"]}</arg>
</arguments>
<assign>
<var>${rc1}</var>
</assign>
<msg timestamp="20190221 11:58:38.862" level="INFO">Executing command 'chmod 444 /ro'.</msg>
<msg timestamp="20190221 11:58:38.938" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190221 11:58:38.938" level="INFO">${rc1} = </msg>
<status status="PASS" endtime="20190221 11:58:38.939" starttime="20190221 11:58:38.862"></status>
</kw>
<doc>Creating Ro Share</doc>
<status status="PASS" endtime="20190221 11:58:38.939" critical="yes" starttime="20190221 11:58:38.813"></status>
</test>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20190221 11:58:39.004" starttime="20190221 11:58:38.940"></status>
</kw>
<status status="PASS" endtime="20190221 11:58:39.004" starttime="20190221 11:58:36.808"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Shares" pass="3">Shares</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
